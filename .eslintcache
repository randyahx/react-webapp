[{"C:\\Users\\USER\\Desktop\\react-webapp\\react-webapp\\src\\index.js":"1","C:\\Users\\USER\\Desktop\\react-webapp\\react-webapp\\src\\Search.js":"2","C:\\Users\\USER\\Desktop\\react-webapp\\react-webapp\\src\\App.js":"3","C:\\Users\\USER\\Desktop\\react-webapp\\react-webapp\\src\\ReactTable.js":"4","C:\\Users\\USER\\Desktop\\react-webapp\\react-webapp\\src\\ReactTableColumns.js":"5","C:\\Users\\USER\\Desktop\\react-webapp\\react-webapp\\src\\ReactTableFilter.js":"6","C:\\Users\\USER\\Desktop\\react-webapp\\react-webapp\\src\\ReactTableColumnFilter.js":"7","C:\\Users\\USER\\Desktop\\react-webapp\\react-webapp\\src\\AdminDeliveryView.js":"8"},{"size":149,"mtime":1607947199347,"results":"9","hashOfConfig":"10"},{"size":2311,"mtime":1609355580582,"results":"11","hashOfConfig":"10"},{"size":564,"mtime":1609354239722,"results":"12","hashOfConfig":"10"},{"size":3864,"mtime":1609319361978,"results":"13","hashOfConfig":"10"},{"size":1053,"mtime":1609231599898,"results":"14","hashOfConfig":"10"},{"size":275,"mtime":1609125128630,"results":"15","hashOfConfig":"10"},{"size":280,"mtime":1609214848672,"results":"16","hashOfConfig":"10"},{"size":483,"mtime":1609353401850,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"12neqo4",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\USER\\Desktop\\react-webapp\\react-webapp\\src\\index.js",[],["39","40"],"C:\\Users\\USER\\Desktop\\react-webapp\\react-webapp\\src\\Search.js",["41","42"],"import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst Search = ({onSearchSubmit}) => {\n    const [term, setTerm] = useState('');\n    const [debouncedTerm, setDebouncedTerm] = useState(term);\n    const [response, setResponse] = useState([]);\n\n    useEffect(() => {debouncing()}, [term]);\n    useEffect(() => {doSearch()}, [debouncedTerm]);\n\n\n    // console.log(term);\n    // console.log(debouncedTerm);\n\n    // 1. Set debounced term on search term input\n    const debouncing = () => {\n        const debounceTimer = setTimeout(() => {\n            setDebouncedTerm(term);\n        }, 200);\n\n        return () => {\n            clearTimeout(debounceTimer);\n        }\n    }\n\n    // 2. Call api with debounced term instead of search term input\n    const search = async () => {\n        const {data} = await axios.get('https://en.wikipedia.org/w/api.php?', {\n            params: {\n                action: 'query',\n                list: 'search',\n                origin: '*',\n                format: 'json',\n                srsearch: debouncedTerm,\n            }\n        })\n        console.log(response);\n        setResponse(data.query.search);\n        onSearchSubmit(response);\n    };\n\n    const doSearch = () => {\n        search();\n    }\n\n    const renderedResponse = response.map(data => {\n        return (\n            <div key={data.pageid} className='item'>\n                <div className='right floated content'>\n                    <a className='ui button' href={`https://en.wikipedia.org?curid=${data.pageid}`}>\n                        Go\n                    </a>\n                </div>\n                <div className='content'>\n                    <div className='header'>\n                        {data.title}\n                    </div>\n                    {data.snippet}\n                </div>\n            </div>\n        )\n    })\n\n    return (\n        <div>\n            <div className='ui form'>\n                <div className='field'>\n                    <label>Enter search term: </label>\n                    <input value={term} onChange={(e) => setTerm(e.target.value)} className='input'/>\n                </div>\n            </div>\n            <div className='ui celled list'>\n                {renderedResponse}\n            </div>\n        </div>\n    );\n}\n\nexport default Search;\n","C:\\Users\\USER\\Desktop\\react-webapp\\react-webapp\\src\\App.js",["43","44","45"],"import React, {useState} from 'react';\r\nimport Search from \"./Search\";\r\nimport ReactTable from \"./ReactTable\";\r\nimport AdminDeliveryView from \"./AdminDeliveryView\";\r\n\r\n\r\nexport default () => {\r\n    const [results, setResults] = useState([{}]);\r\n\r\n    const onSearchSubmit = (props) => {\r\n        if (!props || props.length===0) {\r\n            return;\r\n        }\r\n        setResults(props);\r\n        console.log(\"results\" + results[0].title);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Search onSearchSubmit={onSearchSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\USER\\Desktop\\react-webapp\\react-webapp\\src\\ReactTable.js",["46","47","48","49","50"],"import React, {useMemo} from 'react';\r\nimport {useTable, useSortBy, useFilters, usePagination} from 'react-table';\r\nimport {reacttable_columns} from \"./ReactTableColumns\";\r\nimport {ReactTableFilter} from \"./ReactTableFilter\";\r\nimport db from './db.json'\r\nimport Search from \"./Search\";\r\n\r\nconst ReactTable = ({response}) => {\r\n    // 1. Convert columns and data so they don't reload on render\r\n    const columns = useMemo(() => reacttable_columns, []);\r\n    const data = useMemo(() => response, []);\r\n\r\n    console.log(data);\r\n\r\n    // 2. Create table instance using column and data\r\n    const tableInstance = useTable({\r\n        columns: columns,\r\n        data: data,\r\n    }, useFilters, useSortBy, usePagination);\r\n\r\n    // 3. Extract methods from table instance\r\n    const { getTableProps, getTableBodyProps, headerGroups, page, nextPage, previousPage, canNextPage, canPreviousPage, pageOptions, prepareRow, state, setGlobalFilter } = tableInstance;\r\n\r\n    const {globalFilter, pageIndex} = state;\r\n\r\n    // const renderPaginationRow = headerGroups => {\r\n    //     return (\r\n    //         <tr>\r\n    //             <span>Page {pageIndex+1} of {pageOptions.length}</span>\r\n    //             <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n    //                 <i className='arrow left icon'/>\r\n    //             </button>\r\n    //             <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n    //                 <i className='arrow right icon'/>\r\n    //             </button>\r\n    //         </tr>\r\n    //     )\r\n    // }\r\n\r\n    const renderHeader = headerGroups.map(headerGroup => {\r\n        return (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                    {headerGroup.headers.map(column => {\r\n                            return (\r\n                                    <th>\r\n                                        {column.render('Header')}\r\n                                        <span {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                            <i className={column.isSorted ? (column.isSortedDesc ? 'sort amount up icon' : 'sort amount down icon') : 'sort icon'}/>\r\n                                        </span>\r\n                                        {/*Remove if global filter*/}\r\n                                        <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                                    </th>\r\n                            )\r\n                    })}\r\n                </tr>\r\n        )});\r\n\r\n    const renderBody = page.map(row => {\r\n        prepareRow(row)\r\n        return (\r\n            <tr {...row.getRowProps}>\r\n                {row.cells.map(cell => {\r\n                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n            </tr>\r\n        )})\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                <Search/>\r\n            </div>\r\n            {/*<ReactTableFilter filter={globalFilter} setFilter={setGlobalFilter} />*/}\r\n            <table {...getTableProps()} className='ui basic table'>\r\n                <thead>\r\n                <tr>\r\n                    <span>Page {pageIndex+1} of {pageOptions.length}</span>\r\n                    <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                        <i className='arrow left icon'/>\r\n                    </button>\r\n                    <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                        <i className='arrow right icon'/>\r\n                    </button>\r\n                </tr>\r\n                {renderHeader}\r\n                </thead>\r\n                <tbody {...getTableBodyProps}>\r\n                {renderBody}\r\n                </tbody>\r\n            </table>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ReactTable;","C:\\Users\\USER\\Desktop\\react-webapp\\react-webapp\\src\\ReactTableColumns.js",[],"C:\\Users\\USER\\Desktop\\react-webapp\\react-webapp\\src\\ReactTableFilter.js",[],"C:\\Users\\USER\\Desktop\\react-webapp\\react-webapp\\src\\ReactTableColumnFilter.js",[],["51","52"],"C:\\Users\\USER\\Desktop\\react-webapp\\react-webapp\\src\\AdminDeliveryView.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":9,"column":37,"nodeType":"59","endLine":9,"endColumn":43,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":10,"column":35,"nodeType":"59","endLine":10,"endColumn":50,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":18},{"ruleId":"63","severity":1,"message":"67","line":4,"column":8,"nodeType":"65","messageId":"66","endLine":4,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":7,"column":1,"nodeType":"70","endLine":23,"endColumn":2},{"ruleId":"63","severity":1,"message":"71","line":4,"column":9,"nodeType":"65","messageId":"66","endLine":4,"endColumn":25},{"ruleId":"63","severity":1,"message":"72","line":5,"column":8,"nodeType":"65","messageId":"66","endLine":5,"endColumn":10},{"ruleId":"57","severity":1,"message":"73","line":11,"column":42,"nodeType":"59","endLine":11,"endColumn":44,"suggestions":"74"},{"ruleId":"63","severity":1,"message":"75","line":22,"column":153,"nodeType":"65","messageId":"66","endLine":22,"endColumn":168},{"ruleId":"63","severity":1,"message":"76","line":24,"column":12,"nodeType":"65","messageId":"66","endLine":24,"endColumn":24},{"ruleId":"53","replacedBy":"77"},{"ruleId":"55","replacedBy":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'debouncing'. Either include it or remove the dependency array.","ArrayExpression",["81"],"React Hook useEffect has a missing dependency: 'doSearch'. Either include it or remove the dependency array.",["82"],"no-unused-vars","'ReactTable' is defined but never used.","Identifier","unusedVar","'AdminDeliveryView' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'ReactTableFilter' is defined but never used.","'db' is defined but never used.","React Hook useMemo has a missing dependency: 'response'. Either include it or remove the dependency array.",["83"],"'setGlobalFilter' is assigned a value but never used.","'globalFilter' is assigned a value but never used.",["79"],["80"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [debouncing, term]",{"range":"90","text":"91"},"Update the dependencies array to be: [debouncedTerm, doSearch]",{"range":"92","text":"93"},"Update the dependencies array to be: [response]",{"range":"94","text":"95"},[308,314],"[debouncing, term]",[351,366],"[debouncedTerm, doSearch]",[495,497],"[response]"]